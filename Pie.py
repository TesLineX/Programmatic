import requests as rq, pandas as pd, re, matplotlib.pyplot as plt, seaborn as sb, time, slack_sdk, schedule
from requests.models import Response
from datetime import datetime
from datetime import timedelta
token = ''
slack_channel = ''
slack_token = ''

print('START DSP PIE', datetime.now())
dsp_id = ['10318','10336','10337','10338','10339','10359','10367','10399','10401','10402','10406','10412','10414','10415','10432','10436','10437','10453',
          '10454','10455','10456','10527','10529','10538','10539','10541','10546','10547','10548','10549','10552','10553','10560','10561','10562','10565',
          '10566','10570','10572','10577','10578','10582','10583','10586','10587','10589','10593','10595','10596','10610','10611','10612','10613','10614',
          '10615','10622','10623','10624','10625','10628','10630','10631','10637','10639','10640','10641','10643','10647','10648','10649','10650','10655',
          '10658','10659','10660','10667','10668','10669','10671','10676','10678','10679','10680','10681','10683','10686','10687','10688','10689','10691',
          '10692','10694','10706','10707','10710','10715','10718','10737','10738','10741','10745','10746','10747','10748','10749','10750','10751','10752',
          '10753','10754','10755','10756','10762','10776','10777','10778','10779','10780','10781','10782','10783','10788','10789','10791','10792','10796',
          '10797','10806','10807','10810','10811','10812','10814','10818','10820','10821','10822','10824','10826','10827','10828','10832','10833','10836',
          '10837','10846','10847','10852','10853','10855','10856','10857','10858','10866','10867','10868','10869','10870','10871','10872','10873','10874',
          '10876','10877','10878','10879','10882','10883','10884','10897','10910','10911','10912','10913','10919','10920','10921','10922','10923','10924',
          '10925','10926','10927','10929','10930','10931','10932','10933','10937','10950','10952','10953','10954','10958','10959','10961','10962','10966',
          '10967','10968','10969','10987','10988','10991','10992','10995','10996','10997','10998','10999','11001','11002','11006','11007','11009','11011',
          '11012','11013','11014','11017','11020','11021','11026','11027','11028','11029','11030','11031','11032','11034','11035','11036','11037','11038',
          '11040','11042','11043','11046','11047','11050','11052','11053','11056','11057','11058','11059','11065','11066','11067','11068','11069','11070',
          '11071','11076','11078','11084','11088','11089','11091','11092','11095','11096','11110','11111','11126','11127','11130','11131','11144','11145',
          '11146','11147','11148','11149','11158','11159','11160','11166','11167','11168','11169','11170','11171','11172','11173','11180','11181','11182',
          '11192','11193','11194','11195','11200','11201','11206','11207','11214','11215','11216','11217','11218','11219','11226','11227','11229','11231',
          '11232','11236','11238','11239','11240','11241','11243','11244','11245','11246','11247','11248','11250','11251','11252','11254','11255','11256',
          '11257','11258','11259','11261','11266','11267','11276','11277','11300','11305','11308','11315','11316','11319','11323','11324','11325','11326',
          '11330','11333','11342','11343','11344','11345','11350','11351','11352','11353','11357','11412','11413','11416','11417','11419','11420','11429',
          '11430','11433','11434','11435','11439','11440','11441','11442','11445','11446','11448','11449','11450','11451','11452','11453','11454','11463',
          '11464','11465','11466','11468','11488','11489','11492','11493','11494','11495','11496','11499','11500','11501','11502','11503','11504','11507',
          '11508','11509','11510','11512','11513','11520','11521','11522','11523','11524','11525','11526','11529','11530','11531','11532','11543','11544',
          '11545','11546','11547','11548','11549','11551','11570','11571','11572','11573','11574','11575','11584','11585','11587','11588','11590','11591',
          '11594','11598','11599','11600','11601','11604','11610','11611','11612','11624','11625','11626','11627','11630','11631','11633','11635','11640',
          '11641','11650','11651','11652','11653','11654','11655','11656','11657','11659','11660','11661','11662','11665','11666','11671','11673','11676',
          '11677','11678','11679','11680','11681','11682','11684','11685','11686','11687','11688','11690','11691','11693','11694','11708','11709','11711',
          '11714','11715','11716','11722','11723','11724','11727','11728','11729','11730','11731','11732','11733','11745','11746','11762','11763','11764',
          '11766','11767','11768','11772','11773','11774','11776','11802','11803','11804','11805','11807','11808','11809','11810','11818','11819','11823',
          '11824','11827','11836','11841','11842','11843','11844','11847','11848','11849','11850','11851','11853','11854','11855','11856','11858','11859',
          '11890','11893','11897','11914','11930','11951','11953','11964','11967','11988','12033','12055','12056','12060','12062','12063','12079','12080',
          '12113','12191','12192','12193','12200','12201','12205','12208','12210','12211','12212','12217','12218','12219','12220','12221','12222','12226',
          '12227','12228','12230','12236','12237','12241','12242','12243','12244','12247','12248','12250','12251','12253','12258','12259','12260','12264',
          '12266','12275','12276','12287','12288','12324','12328','12329','12330','12331','12345','12347','12416','12453','12460','12462','12470','12471',
          '12472','12473','12478','12479','12480','12482','12489','12493','12495','12496','12499','12500','12506','12507','12514','12515','12516','12524',
          '12539','12540','12542','12557','12558','12559','12560','12564','12565','12567','12568','12574','12575','12576','12577','12610','12623','12624',
          '12625','12626','12641','12642','12643','12646','12647','12648','12652','12670','12671','12672','12673','12676','12677','12681','12682','12698',
          '12712','12717','12718','12725','12726','12727','12728','12789','12790','12791','12805','12807','12814','12818','12827','12828','12830','12834',
          '12835','12838','12839','12843','12850','12851','12856','12857','12858','12859','12860','12865','12866','12867','12868','12869','12872','12873',
          '12874','12885','12899','12900','12901','12902','12903','12906','12907','12908','12909','12913','12914','12923','12924','12944','12945','12946',
          '12947','12956','12958','12963','12966','12985','12986','12987','12988','12999','13008','13009','13017','13018','13020','13021','13034','13037',
          '13038','13039','13040','13041','13042','13043','13048','13051','13052','13059','13065','13070','13071','13074','13075','13077','13082','13083',
          '13085','13086','13087','13089','13090','13091','13099','13100','13101','13102','13103','13105','13106','13112','13113','13114','13123','13124',
          '13126','13133','13145','13146','13152','13153','13154','13155','13166','13167','13168','13169','13170','13173','13174','13175','13176','13197',
          '13198','13199','13200','13201','13202','13207','13208','13209','13210','13211','13212','13214','13243','13244','13245','13246','13247','13250',
          '13251','13252','13263','13264','13265','13266','13267','13275','13276','13277','13289','13290','13291','13307','13308','13311','13312','13317',
          '13339','13340','13341','13342','13350','13351','13352','13353','13356','13361','13362','13367','13368','13370','13371','13374','13402','13403',
          '13404','13417','13460','13461','13470','13482','13483','13484','13512','13521','13582','13594','13648','13650','13651','13652','13653','13654',
          '13746','13749','13750','13753','13754','13755','13756','13757','13760','13761','13762','13780','13808','13809','13810','13817','13818','13821',
          '13824','13825','13830','13831','13838','13839','13840','13841','13842','13843','13844','13845','13846','13847','13858','13859','13860','13861',
          '13862','13863','13875','13876','13878','13879','13892','13893','13984','13987','13991','14009','14029','14030','14031','14032','14033','14038',
          '14039','14046','14054','14055','14059','14061','14069','14070','14080','14092','14102','14119','14120','14126','14127','14129','14130','14198',
          '14199','14219','14220','14239','14247','14248','14249','14250','14251','14252','14273','14298','14300','14391','14405','14406','14488','14538',
          '14571','14585','14586','14587','14693','14731','14733','14735','14738','14739','14820','14857','14858','14861','14862','14903','14905','14929',
          '14951','14966','14967','14974','14979','14980','15001','15005','15014','15015','15025','15041','15043','15044','15045','15049','15050','15089',
          '15151','15152','15206','15207','15238','15241','15242','15267','15268','15278','15279','15305','15306','15346','15358','15371','15374','15404',
          '15405','15417','15422','15464','15465','15468','15469','15470','15492','15493','15494','15512','15513','15514','15515','15519','15520','15609',
          '15616','15696','15697','15720','15721','15722','15776','15806','15814','15826','15837','15840','15841','15869','15888','15889','15901','15902',
          '15940','15941','15974','15975']

##################################################################################################################################################
# ОБНОВИТЬ ДИАПАЗОН ПРИ ПРЕВЫШЕНИИ ID\\ДОБАВЛЕНИЕ ПОТЕНЦИАЛЬНЫХ НОВЫХ DSP ID
for i in range(15975,16100):
  dsp_id.append(str(i))
df_dsp_c = pd.DataFrame()
for i in range(len(dsp_id)):
  response = rq.get(f'https://backapi.admy.com/api/v1/advertiser/dsp/{dsp_id[i]}?token={token}')
  if response.status_code == 404:
    continue
  if response.status_code == 200:
    while True:
      try:
        data = response.json()
        df_dsp = pd.DataFrame(data).T
        df_dsp_c = pd.concat([df_dsp_c, df_dsp], ignore_index=False)
        break
      except:
        print('ошибка сбора ID {dsp_id[i]}')
        break
print('Сбор DSP Name:OK')
##################################################################################################################################################
#ОБРЕЗАЕМ НАЗВАНИЕ ПО ШАБЛОНУ
df_name = pd.DataFrame(columns=['ID', 'Name', 'Revenue'])
for i in range(len(df_dsp_c['id'])):
  pattern = '_[A-z|a-z][^_]{2,}'
  mat = re.search(pattern, df_dsp_c['name'][i])
  if mat is None:
    continue
  b = re.search(pattern, df_dsp_c['name'][i])
  df_name.loc[len(df_name.index)] = [df_dsp_c['id'][i], b[0], 0]
df_name['Name'] = df_name['Name'].str.replace('_', '')
df_name['Name'] = df_name['Name'].str.upper()
print('RE:OK')
##################################################################################################################################################
#СОБИРАЕМ ДАННЫЕ ПО КАЖДОМУ ID
time_format = '%Y-%m-%d'
d_t = (datetime.now() - timedelta(days=1)).strftime(time_format)

for i in range(len(df_name)):
  url = f'https://backapi.admy.com/api/v1/reports/dsp/bycountries?token={token}&date_from={d_t}&date_to={d_t}&dsp_id={str(df_name['ID'][i])}'
  response = rq.get(url)
  if response.status_code == 404:
    continue
  if response.status_code == 200:
    while True:
      try:
        response = response.json()
        response = response['total']['amount']
        df_name['Revenue'][i] = response
        break
      except:
        print(f'ошибка сбор REV {url}')
        continue
print('Сбор DSP Revenue:OK')
##################################################################################################################################################
#ГРУППИРОВКА И СОРТИРОВКА ПОЛУЧЕННОГО ФРЕЙМА
df_temp = df_name
df_temp = df_temp.groupby('Name').agg(Revenue=('Revenue', 'sum'))
df_temp = df_temp.reset_index().sort_values('Revenue', ascending=False)
df_temp['Revenue'] = df_temp['Revenue'].round(2)
df_temp.reset_index(drop=True, inplace=True)
s_20_x = df_temp['Revenue'].iloc[20:].sum()
df_temp = df_temp[0:20]
df_temp.loc[len(df_temp.index)] = ['OTHERS', s_20_x]
##################################################################################################################################################
sizes = df_temp['Revenue']
colors = ('dodgerblue', 'limegreen', 'cadetblue', 'seagreen','royalblue', 'darkcyan','darkgoldenrod')


def absolute_value(val):
    a = '$' + str((val / 100 * sizes.sum()).round(1))
    return a


fig, ax = plt.subplots(figsize = (15,15))
p, t, a = ax.pie(df_temp['Revenue'], labels=df_temp['Name'], autopct=absolute_value, rotatelabels=True,
                 wedgeprops=dict(width=0.75, edgecolor='black'), colors=colors, labeldistance=1.01)
for tx, pc in zip(t, a):
    rot = tx.get_rotation()
    pc.set_rotation(tx.get_rotation())
ax.set_title(f'DSP | TOP20 | {str(d_t)}')
rev_sum = (round(df_temp['Revenue'].sum(), 2))
circ = plt.Circle((0, 0), 0.24725, color='grey')
ax.add_patch(circ)
ax.text(-0.2, 0, f'Total Revenue: ${rev_sum}', fontsize=11)
pic = fig.savefig('dsp_20_pie.png', dpi=100, bbox_inches='tight')

print('STOP DSP PIE', datetime.now())
print('--------------------------------')

time.sleep(5)
file_uploads_data = [{'file': 'dsp_20_pie.png','title': 'DSP|TOP20'}]
client = slack_sdk.WebClient(token=slack_token)
client.files_upload_v2(file_uploads=file_uploads_data, channel=slack_channel, initial_comment='DSP|TOP20')


